[{"/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/index.js":"1","/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/reportWebVitals.js":"2","/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/App.js":"3","/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/pages/root/index.js":"4","/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/components/layouts/commonLayout/index.js":"5","/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/components/atoms/NavItem/index.js":"6","/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/pages/game/index.js":"7","/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/components/molecules/UserHeader/index.js":"8","/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/components/UserContext.js":"9","/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/pages/signin/index.js":"10","/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/constants/utils.js":"11","/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/pages/signin/graphql.js":"12","/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/pages/playlists/index.js":"13","/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/pages/top-tracks/index.js":"14","/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/components/organisms/OldLobby/index.js":"15","/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/components/molecules/LobbyManager/index.js":"16","/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/components/molecules/LobbyHeader/index.js":"17","/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/components/molecules/GameManager/index.js":"18","/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/components/contexts/NotificationContext/index.js":"19","/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/components/contexts/NotificationContext/NotificationContext.js":"20","/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/components/contexts/GameNotificationContext/GameNotificationContext.js":"21","/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/components/contexts/GameNotificationContext/index.js":"22","/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/components/atoms/LinkWithCopy/index.js":"23","/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/pages/signup/index.js":"24","/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/pages/signup/graphql.js":"25","/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/components/atoms/Spinner/index.js":"26"},{"size":500,"mtime":1607877985804,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1607877985806,"results":"29","hashOfConfig":"28"},{"size":7693,"mtime":1610811738881,"results":"30","hashOfConfig":"28"},{"size":1079,"mtime":1609590673451,"results":"31","hashOfConfig":"28"},{"size":4112,"mtime":1609714249302,"results":"32","hashOfConfig":"28"},{"size":212,"mtime":1609698061678,"results":"33","hashOfConfig":"28"},{"size":307,"mtime":1607886712246,"results":"34","hashOfConfig":"28"},{"size":1512,"mtime":1609714160329,"results":"35","hashOfConfig":"28"},{"size":1002,"mtime":1607898751975,"results":"36","hashOfConfig":"28"},{"size":2146,"mtime":1607900636106,"results":"37","hashOfConfig":"28"},{"size":1908,"mtime":1607899169262,"results":"38","hashOfConfig":"28"},{"size":321,"mtime":1607899200666,"results":"39","hashOfConfig":"28"},{"size":622,"mtime":1609284645435,"results":"40","hashOfConfig":"28"},{"size":593,"mtime":1609284065621,"results":"41","hashOfConfig":"28"},{"size":868,"mtime":1609517767935,"results":"42","hashOfConfig":"28"},{"size":21009,"mtime":1610813357011,"results":"43","hashOfConfig":"28"},{"size":2670,"mtime":1610813305140,"results":"44","hashOfConfig":"28"},{"size":13587,"mtime":1609710747065,"results":"45","hashOfConfig":"28"},{"size":92,"mtime":1609603796523,"results":"46","hashOfConfig":"28"},{"size":1436,"mtime":1609705003465,"results":"47","hashOfConfig":"28"},{"size":1472,"mtime":1609705012589,"results":"48","hashOfConfig":"28"},{"size":106,"mtime":1609604967756,"results":"49","hashOfConfig":"28"},{"size":921,"mtime":1609706785913,"results":"50","hashOfConfig":"28"},{"size":599,"mtime":1609715004975,"results":"51","hashOfConfig":"28"},{"size":321,"mtime":1609714623906,"results":"52","hashOfConfig":"53"},{"size":531,"mtime":1610813386275,"results":"54","hashOfConfig":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"15d7wqf",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"57"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"57"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"57"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"57"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"57"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"57"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"57"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"57"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"drosag",{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/index.js",[],["117","118"],"/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/reportWebVitals.js",[],"/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/App.js",["119","120","121","122","123"],"/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/pages/root/index.js",["124"],"import React from \"react\";\nimport useAxios from \"axios-hooks\";\n\nimport Lobby from \"../../components/organisms/OldLobby\";\n\nexport default function Page() {\n  return (\n    <div>\n      <h1>Lobby</h1>\n      <Lobby />\n      {/* <PlaylistList /> */}\n      <TrackList playlistId={\"6Nqy9X5VFl203IMoe38sMz\"} />\n      {/* <TrackPreview trackId={\"4fixebDZAVToLbUCuEloa2\"} /> */}\n    </div>\n  );\n}\n\nfunction TrackList({ playlistId }) {\n  const [{ loading, data, error }, refetch] = useAxios({\n    url: `https://api.spotify.com/v1/playlists/${playlistId}/tracks`,\n    headers: {\n      Authorization:\n        \"Bearer BQCewY3WAfYQrsSEOmW57BlHoUinFTE3yRPcSgMQwl5O4MQdIbNZNLTlWGG0anarKSH4tyKihrmx-WUL5SzAfcEZf2d9uk9Ph0gGBYrQVLDuJk3HMLWZdqtMIy_JXtyeezfKZBqT-Oi9\",\n    },\n  });\n\n  if (loading) return null;\n  if (error) return <p>Error: {JSON.stringify(error.response.data.error)}</p>;\n  if (!data) return <p>Uncatched error (but no data)</p>;\n\n  return (\n    <ul>\n      {data.items.map((item) => (\n        <li>\n          {item.track.id}: {item.track.name}\n        </li>\n      ))}\n    </ul>\n  );\n}\n","/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/components/layouts/commonLayout/index.js",["125","126","127","128","129","130","131"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport useAxios from \"axios-hooks\";\nimport LobbyManager from \"../../molecules/LobbyManager\";\nimport useNotificationContext from \"../../contexts/NotificationContext\";\n\nimport \"./style.scss\";\n\nimport NavItem from \"../../atoms/NavItem\";\nimport UserHeader from \"../../molecules/UserHeader\";\nimport LobbyHeader from \"../../molecules/LobbyHeader\";\n// import SearchView from \"../SearchView\";\n\nconst STATES = {\n  CONTENT: 1,\n  SEARCH: 2,\n};\n\nexport default function CommonLayout({ children }) {\n  const [mode, setMode] = useState(STATES.CONTENT);\n  const [display, setDisplay] = useState(children);\n  const [notifications, notificationDispatch] = useNotificationContext();\n  const [notificationsToDisplay, setNotificationsToDisplay] = useState([]);\n\n  useEffect(() => {\n    switch (mode) {\n      case STATES.CONTENT:\n        setDisplay(children);\n        break;\n      // case STATES.SEARCH:\n      //   setDisplay(<SearchView query={\"test\"} />);\n      //   break;\n      default:\n        setDisplay(<h1>Error: Unknown mode</h1>);\n        break;\n    }\n  }, [children, mode]);\n\n  useEffect(() => {\n    if (notifications.notifications) {\n      setTimeout(() => {\n        notificationDispatch({\n          action: \"HIDE_NOTIFICATION\",\n        });\n      }, 8000);\n    }\n  }, [notifications.notifications, notificationDispatch]);\n\n  return (\n    <div>\n      <div className=\"common-layout__sidebar\">\n        <h2\n          style={{\n            fontFamily: \"monospace\",\n            textAlign: \"center\",\n            marginLeft: \"-1rem\",\n          }}\n        >\n          BLINDTEST\n        </h2>\n        <UserHeader />\n        {/* <LobbyManager displayShort={true} /> */}\n        <LobbyHeader />\n        <Nav />\n      </div>\n      <>\n        {notificationsToDisplay &&\n          notificationsToDisplay.map((notificationToDisplay) => {\n            notificationToDisplay.data && (\n              <div className={`game-notification__display`}>\n                <div\n                  className={`game-notification__item game-notification__item--${notificationToDisplay.data.type}`}\n                >\n                  {notificationToDisplay.data.message}\n                </div>\n              </div>\n            );\n          })}\n      </>\n      {/* <div className=\"common-layout__topbar\">\n        <i className=\"fas fa-search\"></i>\n        <input\n          type=\"text\"\n          placeholder=\"Rechercher\"\n          // onFocus={() => setMode(STATES.SEARCH)}\n        ></input>{\" \"}\n      </div> */}\n      <div className=\"common-layout__content\">{display}</div>\n    </div>\n  );\n}\n\nexport function Nav() {\n  const content = [\n    // {\n    //   title: \"Les films\",\n    //   items: [\n    //     { title: \"Classement des films\" },\n    //     { title: \"Classement des séries\" },\n    //     { title: \"Tendances mondiales\" },\n    //     { title: \"Tendances locales\" },\n    //     { title: \"Playlists\" },\n    //   ],\n    // },\n    // {\n    //   title: \"\",\n    // },\n  ];\n\n  return (\n    <div>\n      {content.map((section) => (\n        <div className=\"nav-section\">\n          <div className=\"nav-item\">\n            <span className=\"nav-item__section-title\">{section.name}</span>\n          </div>\n        </div>\n      ))}\n      {/* <div className=\"nav-section\">\n        <div className=\"nav-item\">\n          <span className=\"nav-item__section-title\">Mes playlists</span>\n          <PlaylistList />\n        </div>\n      </div> */}\n    </div>\n  );\n}\n\nfunction PlaylistList() {\n  const [{ loading, data, error }, refetch] = useAxios({\n    url: \"https://api.spotify.com/v1/me/playlists?limit=50\",\n    headers: {\n      Authorization:\n        \"Bearer BQClLEibdwnUaoa3PIZ7EOZQI-4WTL6Gvnc8DR7JiiO3VX2AMZIGu451Z036PPSdz6nZ5FEoMJlqJcRJ-enzhJnUbL_PXSHOjSPpayWLrHFdlaX3eNPi4rJG3Uo2GlBMZzyrBvd3S04a\",\n    },\n  });\n\n  if (loading) return null;\n  if (error) return <p>Error: {JSON.stringify(error)}</p>;\n  if (!data) return <p>Uncatched error (but no data)</p>;\n\n  return (\n    <>\n      {data.items.map((item) => (\n        <NavItem title={item.name} />\n      ))}\n    </>\n  );\n}\n","/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/components/atoms/NavItem/index.js",[],"/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/pages/game/index.js",[],"/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/components/molecules/UserHeader/index.js",["132"],"import React, { useState, useEffect } from \"react\";\nimport useUserContext from \"../../UserContext\";\nimport { Redirect } from \"react-router-dom\";\nimport { gql, useApolloClient } from \"@apollo/client\";\nimport { Link } from \"react-router-dom\";\nimport { getValueFromLocalStorage } from \"../../../constants/utils\";\n\nimport \"./style.scss\";\n\nexport default function UserHeader() {\n  const [user, userDispatch] = useUserContext();\n  const [userData, setUserData] = useState(null);\n  const apolloClient = useApolloClient();\n\n  useEffect(() => {\n    if (!getValueFromLocalStorage(\"accessToken\"))\n      return <Redirect to=\"/signout\" />;\n    apolloClient\n      .query({\n        query: gql`\n          query user {\n            user {\n              uuid\n              name\n            }\n          }\n        `,\n      })\n      .then((data) => {\n        setUserData(data.data.user);\n      })\n      .catch((error) => {\n        console.log({ error });\n      });\n  }, [apolloClient]);\n\n  if (!user) return <Redirect to=\"/signout\" />;\n\n  return (\n    <div className=\"user-header__section\">\n      <span className=\"user-header__name\" style={{ fontSize: \"1.5rem\" }}>\n        {userData && userData.name}{\" \"}\n      </span>\n      <p>\n        <Link to={\"/connect/spotify\"} style={{ textDecoration: \"none\" }}>\n          <button className=\"user-header__button\">\n            <i className=\"fab fa-spotify\" /> {userData ? \"Sync\" : \"Log in with\"}{\" \"}\n            Spotify account\n          </button>\n        </Link>\n      </p>\n    </div>\n  );\n}\n","/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/components/UserContext.js",[],"/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/pages/signin/index.js",["133","134","135"],"import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useApolloClient } from \"@apollo/client\";\nimport jwtDecode from \"jwt-decode\";\n\nimport { getValueFromLocalStorage, saveTokens } from \"../../constants/utils\";\nimport userContext, {\n  REDUCER_ACTIONS as USER_REDUCER_ACTIONS,\n} from \"../../components/UserContext\";\nimport { SIGNIN_QUERY } from \"./graphql\";\n\nexport default function Page() {\n  return (\n    <div>\n      <SigninForm />\n    </div>\n  );\n}\n\nexport function SigninForm({ location }) {\n  const { register, handleSubmit } = useForm();\n  const [error, setError] = useState(null);\n  const [done, setDone] = useState(false);\n  const apolloClient = useApolloClient();\n  const [user, userDispatch] = userContext();\n\n  const onSubmit = async (formData) => {\n    setError && setError(null);\n    try {\n      const { data } = await apolloClient.query({\n        query: SIGNIN_QUERY,\n        variables: {\n          email: formData.email,\n          password: formData.password,\n          refreshToken:\n            formData.refreshToken || getValueFromLocalStorage(\"refreshToken\"),\n        },\n        fetchPolicy: \"no-cache\",\n      });\n      if (data.authenticate.error) {\n        setError && setError(data.authenticate.error);\n        return;\n      }\n      const refreshToken = data.authenticate.refreshToken;\n      const accessToken = data.authenticate.accessToken;\n      const decodedToken = jwtDecode(accessToken);\n\n      userDispatch({\n        action: USER_REDUCER_ACTIONS.SIGN_IN,\n        user: decodedToken && decodedToken.identity,\n      });\n      saveTokens({ accessToken, refreshToken });\n      setDone && setDone(true);\n    } catch (e) {\n      setError && setError(e);\n      console.log(\"error:\", e);\n    }\n  };\n\n  return (\n    <form onSubmit={() => handleSubmit((data) => onSubmit(data))}>\n      <input\n        name=\"email\"\n        ref={register}\n        placeholder=\"Email address\"\n        type=\"text\"\n      />\n      <input\n        name=\"password\"\n        ref={register}\n        placeholder=\"Password\"\n        type=\"password\"\n      />\n      <input type=\"submit\" value=\"Sign in\" />\n    </form>\n  );\n}\n","/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/constants/utils.js",[],"/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/pages/signin/graphql.js",[],"/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/pages/playlists/index.js",["136"],"import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { gql, useQuery } from \"@apollo/client\";\n\nexport default function Page() {\n  const { loading, data, error } = useQuery(gql`\n    query {\n      myPlaylists {\n        uuid\n        title\n      }\n    }\n  `);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {JSON.stringify(error)}</p>;\n\n  return (\n    <div style={{ marginTop: \"1rem\" }}>\n      <h1>Playlists </h1>\n      <ul>\n        {data &&\n          data.myPlaylists &&\n          data.myPlaylists.map((playlist) => <li>{playlist.name}</li>)}\n      </ul>\n    </div>\n  );\n}\n","/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/pages/top-tracks/index.js",["137"],"import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { gql, useQuery } from \"@apollo/client\";\n\nexport default function Page() {\n  const { loading, data, error } = useQuery(gql`\n    query {\n      topTracks {\n        name\n      }\n    }\n  `);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {JSON.stringify(error)}</p>;\n\n  return (\n    <div style={{ marginTop: \"1rem\" }}>\n      <h1>Tracks </h1>\n      <ul>\n        {data &&\n          data.topTracks &&\n          data.topTracks.map((track) => <li>{track.name}</li>)}\n      </ul>\n    </div>\n  );\n}\n","/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/components/organisms/OldLobby/index.js",["138","139"],"import React, { useState, useEffect } from \"react\";\n\nexport default function Lobby() {\n  const [users, setUsers] = useState([\n    { name: \"Martin\" },\n    { name: \"Léandre\" },\n    { name: \"Rémi\" },\n    { name: \"Ursula\" },\n  ]);\n\n  return (\n    <div>\n      <div>\n        <h3>Players</h3>\n        {users.map((user) => (\n          <div>- {user.name}</div>\n        ))}\n        <br />\n        <div>Invite link: ###</div>\n      </div>\n      <div>\n        <h3>Next game settings</h3>\n        <div>\n          Playlist:{\" \"}\n          <input\n            type=\"text\"\n            placeholder=\"https://spotify.com/playlist/UAZ4368842\"\n          />\n        </div>\n        <div>\n          Number of musics:{\" \"}\n          <input type=\"number\" placeholder=\"30\" defaultValue={30} />\n        </div>\n        <br></br>\n        <button>Start game</button>\n      </div>\n    </div>\n  );\n}\n","/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/components/molecules/LobbyManager/index.js",["140","141","142","143","144","145","146","147","148","149","150","151"],"/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/components/molecules/LobbyHeader/index.js",["152"],"/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/components/molecules/GameManager/index.js",["153","154","155","156","157","158","159","160","161"],"import {\n  useApolloClient,\n  gql,\n  useSubscription,\n  useQuery,\n} from \"@apollo/client\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useParams, Redirect, Link } from \"react-router-dom\";\nimport useUserContext from \"../../UserContext\";\nimport ReactAudioPlayer from \"react-audio-player\";\nimport Countdown from \"react-countdown\";\nimport useGameNotificationContext from \"../../contexts/GameNotificationContext\";\nimport { GameNotificationProvider } from \"../../contexts/GameNotificationContext/GameNotificationContext\";\nimport { Line, Circle } from \"rc-progress\";\nimport { v4 as uuid } from \"uuid\";\n\nimport \"./style.scss\";\n\nconst gameNotificationReducer = (state, payload) => {\n  switch (payload.action) {\n    case \"SHOW_NOTIFICATION\": {\n      return { data: payload.notification };\n    }\n\n    case \"HIDE_NOTIFICATION\": {\n      return { data: null };\n    }\n\n    default: {\n      return { ...state };\n    }\n  }\n};\n\nexport default function Component({ defaultJoinCode }) {\n  const params = useParams();\n  const [rendered, setRendered] = useState(<p>Loading...</p>);\n  const [joinCode, setJoinCode] = useState(defaultJoinCode);\n\n  useEffect(() => {\n    if (params.joinCode) {\n      setJoinCode(params.joinCode);\n    }\n  }, [params]);\n\n  if (!joinCode) return <p>Missing join code</p>;\n  return (\n    <div>\n      <GameController joinCode={joinCode} />\n    </div>\n  );\n}\n\nconst GameController = ({ joinCode }) => {\n  const { data, loading, error, refetch } = useQuery(\n    gql`\n      query Game($joinCode: String!) {\n        game(joinCode: $joinCode) {\n          uuid\n          joinCode\n          currentTrackIndex\n          nextTrackAt\n          endAt\n          users {\n            uuid\n            name\n            score\n          }\n          tracks {\n            name\n            previewUrl\n            artists {\n              name\n            }\n          }\n          lobby {\n            joinCode\n          }\n        }\n      }\n    `,\n    {\n      variables: {\n        joinCode: joinCode,\n      },\n      fetchPolicy: \"no-cache\",\n    }\n  );\n\n  if (loading || !data) return <p>Loading...</p>;\n  if (error)\n    return (\n      <>\n        <p>{JSON.stringify(error)}</p>\n      </>\n    );\n\n  return (\n    <>\n      <GameNotificationProvider>\n        <GameDisplay game={data.game} refetch={refetch} />\n        <GameEventProcessor game={data.game} refetch={refetch} />\n      </GameNotificationProvider>\n    </>\n  );\n};\n\nexport const ScoreDisplay = ({ users }) => {\n  const [sortedUsers, setSortedUsers] = useState([]);\n  useEffect(() => {\n    if (!users) {\n      setSortedUsers([]);\n      return;\n    }\n    let newSortedUsers = [...users];\n    newSortedUsers.sort((a, b) => {\n      return b.score !== a.score\n        ? b.score - a.score\n        : a.name.localeCompare(b.name);\n    });\n    setSortedUsers(newSortedUsers);\n  }, [users]);\n  return (\n    <>\n      <h3>Scores</h3>\n      {sortedUsers &&\n        sortedUsers.map((user) => (\n          <p key={user.uuid}>\n            <i className=\"fas fa-star\" /> {user.score} {user.name}\n          </p>\n        ))}\n    </>\n  );\n};\n\nexport const StartGameSection = ({ game }) => {\n  const apolloClient = useApolloClient();\n  return (\n    <div className=\"game-manager__start-section\">\n      <h3>Game ready</h3>\n      <p>Click below to start.</p>\n      <button\n        className=\"game-manager__start-button\"\n        onClick={async () => {\n          await StartGame({ apolloClient, gameUuid: game.uuid });\n        }}\n      >\n        Start game\n      </button>\n    </div>\n  );\n};\n\nexport const EndGameSection = ({ game }) => {\n  const backToLobby =\n    game.lobby && game.lobby.joinCode ? (\n      <Link\n        to={`/lobby/${game.lobby.joinCode}`}\n        style={{ color: \"white\", textDecoration: \"none\" }}\n      >\n        <i className=\"fas fa-arrow-circle-left\" /> Return to lobby\n      </Link>\n    ) : null;\n  return (\n    <div className=\"game-manager__finished-section\">\n      <ScoreDisplay users={game.users} />\n      {backToLobby}\n    </div>\n  );\n};\n\nconst GameOngoingDisplay = ({ game }) => {\n  const apolloClient = useApolloClient();\n  const [answerInputValue, setAnswerInputValue] = useState(\"\");\n\n  useEffect(() => {\n    setAnswerInputValue(\"\");\n  }, [game.currentTrackIndex]);\n\n  return (\n    <>\n      <ScoreDisplay users={game.users} />\n      <div className=\"game-manager__section\">\n        <TrackPreview\n          previewUrl={game.tracks[game.currentTrackIndex].previewUrl}\n        />\n        <p className=\"game-manager__progress-text\">\n          Track n°{game.currentTrackIndex + 1}{\" \"}\n          <CountdownCircle nextTrackAt={game.nextTrackAt} />\n        </p>\n\n        <form\n          onSubmit={async (e) => {\n            e.preventDefault();\n            try {\n              await proposeAnswer({\n                apolloClient,\n                answerText: answerInputValue,\n                gameUuid: game.uuid,\n                trackIndex: game.currentTrackIndex,\n              });\n            } catch (e) {\n              if (\n                e.message === \"WRONG_TRACK_INDEX\" ||\n                e.message === \"ALREADY_ANSWERED\"\n              ) {\n                window.location.reload();\n              } else {\n                throw e;\n              }\n            }\n            setAnswerInputValue(\"\");\n          }}\n        >\n          <input\n            type=\"text\"\n            placeholder=\"Make a guess\"\n            value={answerInputValue}\n            onChange={(e) => {\n              setAnswerInputValue(e.target.value);\n            }}\n            className=\"game-manager__input\"\n            autoComplete=\"off\"\n            style={{ outline: \"none\" }}\n          />\n        </form>\n      </div>\n    </>\n  );\n};\n\nconst GameDisplay = ({ game, refetch }) => {\n  const apolloClient = useApolloClient();\n  const [gameFlowSection, setGameFlowSection] = useState(null);\n\n  // useEffect(() => {\n  //   const interval = setInterval(() => {\n  //     setForceRefreshToken(Date.now());\n  //   }, 1000);\n  //   return () => clearInterval(interval);\n  // }, []);\n\n  useEffect(() => {\n    if (!game) return;\n    const gameEnded = game.endAt && new Date(+game.endAt) < Date.now();\n    if (\n      !gameEnded &&\n      game.nextTrackAt &&\n      new Date(+game.nextTrackAt) < Date.now()\n    ) {\n      refetch();\n    }\n    if (game.currentTrackIndex < 0) {\n      setGameFlowSection(<StartGameSection game={game} />);\n    } else if (game.currentTrackIndex >= 0 && game.nextTrackAt && !gameEnded) {\n      setGameFlowSection(<GameOngoingDisplay game={game} />);\n    } else {\n      setGameFlowSection(<EndGameSection game={game} />);\n    }\n  }, [game, apolloClient, refetch]);\n  if (!game) return null;\n\n  return <div className=\"game__section\">{gameFlowSection}</div>;\n};\n\nconst CountdownCircle = ({ nextTrackAt }) => {\n  const [refreshKey, setRefreshKey] = useState(\"\");\n  const [originalRemainingTime, setOriginalRemainingTime] = useState(null);\n\n  useEffect(() => {\n    if (nextTrackAt)\n      setOriginalRemainingTime(new Date(+nextTrackAt) - new Date());\n  }, [nextTrackAt]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setRefreshKey(uuid());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const diffCoeff = Math.max(\n    1 - (new Date(+nextTrackAt) - new Date()) / originalRemainingTime,\n    0\n  );\n  return (\n    <Circle\n      refresh={refreshKey}\n      className=\"game-manager__progress-circle\"\n      percent={diffCoeff * 100}\n      strokeWidth={10}\n      strokeColor={`rgb(${255 - diffCoeff * 10},${\n        255 - Math.pow(diffCoeff, 2) * 200\n      },${255 - Math.pow(diffCoeff, 2) * 200})`}\n    />\n  );\n};\n\nconst AutoHide = ({ children, delayMs }) => {\n  const [shouldDisplay, setShouldDisplay] = useState(true);\n  useEffect(() => {\n    setTimeout(() => {\n      setShouldDisplay(false);\n    }, delayMs);\n  }, [setShouldDisplay, delayMs]);\n  if (!shouldDisplay) return null;\n  return children;\n};\n\nconst proposeAnswer = async ({\n  apolloClient,\n  gameUuid,\n  trackIndex,\n  answerText,\n}) => {\n  if (answerText.trim().length <= 0) return;\n  try {\n    const resp = await apolloClient.mutate({\n      mutation: gql`\n        mutation ProposeAnswer(\n          $gameUuid: ID\n          $trackIndex: Int\n          $answerText: String\n        ) {\n          proposeAnswer(\n            gameUuid: $gameUuid\n            trackIndex: $trackIndex\n            answerText: $answerText\n          )\n        }\n      `,\n      variables: {\n        gameUuid,\n        trackIndex,\n        answerText,\n      },\n    });\n    return resp;\n  } catch (e) {\n    throw e;\n  }\n};\n\nconst GameEventProcessor = ({ game, refetch }) => {\n  const [\n    gameNotification,\n    gameNotificationDispatch,\n  ] = useGameNotificationContext();\n  const { data, loading } = useSubscription(\n    gql`\n      subscription OnGameEvent($gameUuid: ID) {\n        gameEvent(gameUuid: $gameUuid) {\n          kind\n          userName\n          answeredBy\n          answerText\n        }\n      }\n    `,\n    {\n      variables: {\n        gameUuid: game.uuid,\n      },\n    }\n  );\n  useEffect(() => {\n    if (!data || !data.gameEvent || !data.gameEvent) return;\n    console.log({\n      event: \"gameEventProcessor.newEvent\",\n      kind: data.gameEvent ? data.gameEvent.kind : null,\n    });\n    let notificationConfig = {\n      type: \"default\",\n      message: \"\",\n    };\n    const kind = data.gameEvent.kind ? data.gameEvent.kind.toUpperCase() : null;\n    switch (kind) {\n      case \"ANSWER_ACCEPTED\":\n        notificationConfig.type = \"success\";\n        notificationConfig.message = (\n          <span>\n            <span className=\"game-notification__content--username\">\n              {data.gameEvent.userName || \"Someone\"}\n            </span>\n            <br />\n            guessed {game.tracks[game.currentTrackIndex].name} by{\" \"}\n            {game.tracks[game.currentTrackIndex].artists\n              .map((artist) => artist.name)\n              .join(\" & \")}{\" \"}\n            !\n          </span>\n        );\n        break;\n      case \"ANSWER_REJECTED\":\n        notificationConfig.type = \"error\";\n        notificationConfig.message = (\n          <span>\n            <span className=\"game-notification__content--username\">\n              {data.gameEvent.answerText}\n            </span>\n            <br />\n            is wrong !{\" \"}\n            {data.gameEvent.userName ? `(${data.gameEvent.userName})` : null}\n          </span>\n        );\n        break;\n      case \"GAME_FINISHED\":\n        notificationConfig.type = \"default\";\n        notificationConfig.message = (\n          <span className=\"game-notification__content--fullheight\">\n            Game finished !\n          </span>\n        );\n        break;\n      case \"NEXT_TRACK\":\n        setTimeout(() => {\n          refetch();\n        }, new Date(+game.nextTrackAt) - new Date() + 200);\n        console.log({ msg: \"next track\" });\n        if (game.currentTrackIndex === -1) {\n          notificationConfig = null;\n          break;\n        }\n        if (data.gameEvent.answeredBy) {\n          notificationConfig.type = \"success\";\n          notificationConfig.message = (\n            <span>\n              <span className=\"game-notification__content--username\">\n                {game.tracks[game.currentTrackIndex].name} by{\" \"}\n                {game.tracks[game.currentTrackIndex].artists\n                  .map((artist) => artist.name)\n                  .join(\" & \")}{\" \"}\n              </span>\n              <br />\n              guessed by {data.gameEvent.answeredBy || \"Someone\"}\n            </span>\n          );\n        } else {\n          notificationConfig.type = \"default\";\n          notificationConfig.message = (\n            <span>\n              <span className=\"game-notification__content--username\">\n                {game.tracks[game.currentTrackIndex].name} by{\" \"}\n                {game.tracks[game.currentTrackIndex].artists\n                  .map((artist) => artist.name)\n                  .join(\" & \")}\n              </span>\n              <br />\n              No one found the answer !\n            </span>\n          );\n        }\n        break;\n      default:\n        notificationConfig.type = \"success\";\n        notificationConfig.message = data.gameEvent.kind;\n        break;\n    }\n    refetch();\n    if (notificationConfig) {\n      gameNotificationDispatch({\n        action: \"SHOW_NOTIFICATION\",\n        notification: notificationConfig,\n      });\n      setTimeout(() => {\n        gameNotificationDispatch({\n          action: \"HIDE_NOTIFICATION\",\n        });\n      }, 6000);\n    }\n  }, [data, refetch, gameNotificationDispatch]);\n  const notificationRef = useRef(null);\n\n  if (loading || !data || !data.gameEvent || !data.gameEvent.kind) return null;\n  return (\n    <>\n      <div className={`game-notification__display`}>\n        {gameNotification.notifications &&\n          gameNotification.notifications.map((notification) => (\n            <div\n              className={`game-notification__item game-notification__item--${notification.type}`}\n              ref={notificationRef}\n              key={notification.uid}\n            >\n              {notification.message}\n            </div>\n          ))}\n      </div>\n      {/* <p>Last event: {data.gameEvent.kind}</p> */}\n    </>\n  );\n};\n\nfunction TrackPreview({ previewUrl, autoPlay = true }) {\n  return (\n    <>\n      <ReactAudioPlayer src={previewUrl} autoPlay={autoPlay} />\n    </>\n  );\n}\n\nconst StartGame = async ({ apolloClient, gameUuid }) => {\n  return await apolloClient.mutate({\n    mutation: gql`\n      mutation StartGame($gameUuid: ID) {\n        startGame(gameUuid: $gameUuid)\n      }\n    `,\n    variables: {\n      gameUuid,\n    },\n  });\n};\n","/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/components/contexts/NotificationContext/index.js",[],"/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/components/contexts/NotificationContext/NotificationContext.js",[],"/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/components/contexts/GameNotificationContext/GameNotificationContext.js",[],"/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/components/contexts/GameNotificationContext/index.js",[],"/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/components/atoms/LinkWithCopy/index.js",[],"/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/pages/signup/index.js",["162"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./style.scss\";\n\nexport default function Page() {\n  return (\n    <div className=\"signup__section\">\n      <div className=\"signup__content\">\n        <h1 style={{ fontFamily: \"monospace\", marginBottom: \"2rem\" }}>\n          BLINDTEST\n        </h1>\n        <Link to={\"/connect/spotify\"} style={{ textDecoration: \"none\" }}>\n          <button className=\"user-header__button\">\n            <i className=\"fab fa-spotify\" /> Log in with Spotify account\n          </button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n","/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/pages/signup/graphql.js",[],"/Users/snwfdhmp/Dev/workspaces/projects/blindtest/src/front/src/components/atoms/Spinner/index.js",[],{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":10,"column":8,"nodeType":"169","messageId":"170","endLine":10,"endColumn":16},{"ruleId":"167","severity":1,"message":"171","line":11,"column":8,"nodeType":"169","messageId":"170","endLine":11,"endColumn":16},{"ruleId":"172","severity":1,"message":"173","line":63,"column":41,"nodeType":"174","messageId":"175","endLine":63,"endColumn":43},{"ruleId":"167","severity":1,"message":"176","line":160,"column":16,"nodeType":"169","messageId":"170","endLine":160,"endColumn":17},{"ruleId":"167","severity":1,"message":"177","line":209,"column":10,"nodeType":"169","messageId":"170","endLine":209,"endColumn":14},{"ruleId":"167","severity":1,"message":"178","line":19,"column":36,"nodeType":"169","messageId":"170","endLine":19,"endColumn":43},{"ruleId":"167","severity":1,"message":"179","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":14},{"ruleId":"167","severity":1,"message":"180","line":4,"column":8,"nodeType":"169","messageId":"170","endLine":4,"endColumn":20},{"ruleId":"167","severity":1,"message":"181","line":20,"column":16,"nodeType":"169","messageId":"170","endLine":20,"endColumn":23},{"ruleId":"167","severity":1,"message":"182","line":23,"column":34,"nodeType":"169","messageId":"170","endLine":23,"endColumn":59},{"ruleId":"183","severity":1,"message":"184","line":68,"column":62,"nodeType":"185","messageId":"186","endLine":68,"endColumn":64},{"ruleId":"167","severity":1,"message":"187","line":129,"column":10,"nodeType":"169","messageId":"170","endLine":129,"endColumn":22},{"ruleId":"167","severity":1,"message":"178","line":130,"column":36,"nodeType":"169","messageId":"170","endLine":130,"endColumn":43},{"ruleId":"167","severity":1,"message":"188","line":11,"column":16,"nodeType":"169","messageId":"170","endLine":11,"endColumn":28},{"ruleId":"167","severity":1,"message":"189","line":22,"column":10,"nodeType":"169","messageId":"170","endLine":22,"endColumn":15},{"ruleId":"167","severity":1,"message":"190","line":23,"column":10,"nodeType":"169","messageId":"170","endLine":23,"endColumn":14},{"ruleId":"167","severity":1,"message":"177","line":25,"column":10,"nodeType":"169","messageId":"170","endLine":25,"endColumn":14},{"ruleId":"167","severity":1,"message":"191","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":19},{"ruleId":"167","severity":1,"message":"191","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":19},{"ruleId":"167","severity":1,"message":"192","line":1,"column":27,"nodeType":"169","messageId":"170","endLine":1,"endColumn":36},{"ruleId":"167","severity":1,"message":"193","line":4,"column":17,"nodeType":"169","messageId":"170","endLine":4,"endColumn":25},{"ruleId":"167","severity":1,"message":"194","line":18,"column":10,"nodeType":"169","messageId":"170","endLine":18,"endColumn":18},{"ruleId":"167","severity":1,"message":"195","line":18,"column":20,"nodeType":"169","messageId":"170","endLine":18,"endColumn":31},{"ruleId":"167","severity":1,"message":"176","line":108,"column":16,"nodeType":"169","messageId":"170","endLine":108,"endColumn":17},{"ruleId":"167","severity":1,"message":"176","line":367,"column":10,"nodeType":"169","messageId":"170","endLine":367,"endColumn":11},{"ruleId":"167","severity":1,"message":"196","line":368,"column":16,"nodeType":"169","messageId":"170","endLine":368,"endColumn":18},{"ruleId":"172","severity":1,"message":"173","line":403,"column":40,"nodeType":"174","messageId":"175","endLine":403,"endColumn":42},{"ruleId":"197","severity":1,"message":"198","line":422,"column":6,"nodeType":"199","endLine":422,"endColumn":43,"suggestions":"200"},{"ruleId":"167","severity":1,"message":"201","line":432,"column":10,"nodeType":"169","messageId":"170","endLine":432,"endColumn":19},{"ruleId":"167","severity":1,"message":"202","line":432,"column":21,"nodeType":"169","messageId":"170","endLine":432,"endColumn":33},{"ruleId":"167","severity":1,"message":"188","line":456,"column":16,"nodeType":"169","messageId":"170","endLine":456,"endColumn":28},{"ruleId":"167","severity":1,"message":"203","line":498,"column":10,"nodeType":"169","messageId":"170","endLine":498,"endColumn":28},{"ruleId":"172","severity":1,"message":"204","line":609,"column":50,"nodeType":"174","messageId":"175","endLine":609,"endColumn":52},{"ruleId":"167","severity":1,"message":"176","line":12,"column":16,"nodeType":"169","messageId":"170","endLine":12,"endColumn":17},{"ruleId":"167","severity":1,"message":"205","line":8,"column":21,"nodeType":"169","messageId":"170","endLine":8,"endColumn":29},{"ruleId":"167","severity":1,"message":"206","line":9,"column":8,"nodeType":"169","messageId":"170","endLine":9,"endColumn":22},{"ruleId":"167","severity":1,"message":"207","line":11,"column":8,"nodeType":"169","messageId":"170","endLine":11,"endColumn":17},{"ruleId":"167","severity":1,"message":"208","line":14,"column":10,"nodeType":"169","messageId":"170","endLine":14,"endColumn":14},{"ruleId":"167","severity":1,"message":"209","line":19,"column":7,"nodeType":"169","messageId":"170","endLine":19,"endColumn":30},{"ruleId":"167","severity":1,"message":"194","line":37,"column":10,"nodeType":"169","messageId":"170","endLine":37,"endColumn":18},{"ruleId":"167","severity":1,"message":"195","line":37,"column":20,"nodeType":"169","messageId":"170","endLine":37,"endColumn":31},{"ruleId":"167","severity":1,"message":"210","line":299,"column":7,"nodeType":"169","messageId":"170","endLine":299,"endColumn":15},{"ruleId":"197","severity":1,"message":"211","line":471,"column":6,"nodeType":"199","endLine":471,"endColumn":47,"suggestions":"212"},{"ruleId":"167","severity":1,"message":"213","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":25},"no-native-reassign",["214"],"no-negated-in-lhs",["215"],"no-unused-vars","'RootPage' is defined but never used.","Identifier","unusedVar","'GamePage' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'_' is assigned a value but never used.","'user' is assigned a value but never used.","'refetch' is assigned a value but never used.","'Link' is defined but never used.","'LobbyManager' is defined but never used.","'setMode' is assigned a value but never used.","'setNotificationsToDisplay' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'PlaylistList' is defined but never used.","'userDispatch' is assigned a value but never used.","'error' is assigned a value but never used.","'done' is assigned a value but never used.","'useParams' is defined but never used.","'useEffect' is defined but never used.","'setUsers' is assigned a value but never used.","'rendered' is assigned a value but never used.","'setRendered' is assigned a value but never used.","'__' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.data.userUuid'. Either include it or remove the dependency array.","ArrayExpression",["216"],"'triggered' is assigned a value but never used.","'setTrigerred' is assigned a value but never used.","'pickedPlaylistUuid' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'Redirect' is defined but never used.","'useUserContext' is defined but never used.","'Countdown' is defined but never used.","'Line' is defined but never used.","'gameNotificationReducer' is assigned a value but never used.","'AutoHide' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'game.currentTrackIndex', 'game.nextTrackAt', and 'game.tracks'. Either include them or remove the dependency array.",["217"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},"Update the dependencies array to be: [data, refetch, notificationDispatch, user.data.userUuid]",{"range":"222","text":"223"},"Update the dependencies array to be: [data, refetch, gameNotificationDispatch, game.tracks, game.currentTrackIndex, game.nextTrackAt]",{"range":"224","text":"225"},[11149,11186],"[data, refetch, notificationDispatch, user.data.userUuid]",[12471,12512],"[data, refetch, gameNotificationDispatch, game.tracks, game.currentTrackIndex, game.nextTrackAt]"]